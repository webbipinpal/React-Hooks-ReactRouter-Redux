{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","onAddedCommentHandler","useCallback","length","console","log","onClick","HighlightedQuote","quote","author","QuotesDetails","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,mBCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,wHCSXC,EARK,SAACC,GACnB,OACE,oBAAIC,UAAWC,IAAQC,KAAvB,SACE,4BAAIH,EAAMI,U,iBCQDC,EAVM,SAACL,GACpB,OACE,oBAAIC,UAAWC,IAAQI,SAAvB,SACGN,EAAMM,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAA8BJ,KAAMI,EAAQJ,MAA1BI,EAAQC,U,kCCwCnBC,EAzCQ,SAACV,GACtB,IAAMW,EAAiBC,mBACvB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MACrBC,EAAmBlB,EAAnBkB,eAERC,qBAAW,WAEK,cAAXH,GAA2BC,GAC5BC,MAGD,CAACF,EAAQC,EAAOC,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAcZ,EAAea,QAAQC,MAI3CV,EAAa,CAACW,YAAa,CAACtB,KAAKmB,GAAcI,QAAS3B,EAAM2B,UAC9DhB,EAAea,QAAQC,MAAQ,IAGjC,OACE,uBAAMxB,UAAWC,IAAQ0B,KAAMC,SAAUT,EAAzC,UACc,YAAXJ,GACC,qBAAKf,UAAU,UAAf,SACI,cAAC6B,EAAA,EAAD,MAGN,sBAAK7B,UAAWC,IAAQ6B,QAASF,SAAUT,EAA3C,UACE,uBAAOY,QAAQ,UAAf,0BACA,0BAAUvB,GAAG,UAAUwB,KAAK,IAAIC,IAAKvB,OAEvC,qBAAKV,UAAWC,IAAQiC,QAAxB,SACE,wBAAQlC,UAAU,MAAlB,+BCiBOmC,EAhDE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEQZ,EADOa,cACPb,QAER,EAAoDd,YAAQ4B,KAApD1B,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAa0B,EAAlC,EAA6BC,KAE7BxB,qBAAW,WACTJ,EAAYY,KACX,CAACZ,EAAaY,IAEjB,IAQIrB,EALEsC,EAAwBC,uBAAa,WACzC9B,EAAYY,KAEX,CAACZ,EAAaY,IAiBjB,MAbc,YAAXX,IACDV,EAAW,sBAAKL,UAAU,WAAf,cAA2B,cAAC6B,EAAA,EAAD,IAA3B,QAEC,cAAXd,GAA0B0B,GAAkBA,EAAeI,OAAS,IACrExC,EAAW,cAAC,EAAD,CAAcA,SAAUoC,KAGvB,cAAX1B,GAA4B0B,GAAqC,IAAnBA,IAC/CpC,EAAW,mBAAGL,UAAU,WAAb,2CAGb8C,QAAQC,IAAI1C,GAGV,0BAASL,UAAWC,IAAQI,SAA5B,UACE,gDACEgC,GACA,wBAAQrC,UAAU,MAAMgD,QA3BC,WAC7BV,GAAmB,IA0Bf,2BAIDD,GAAmB,cAAC,EAAD,CAAgBpB,eAAgB0B,EAAuBjB,QAASA,IACnFrB,M,iBC1CQ4C,EATU,SAAClD,GACxB,OACE,yBAAQC,UAAWC,IAAQiD,MAA3B,UACE,4BAAInD,EAAMI,OACV,qCAAaJ,EAAMoD,aCyCVC,UAtCO,WAClB,IAAMC,EAAQC,cAEN5B,EADOa,cACPb,QAGR,EAAyDd,YAAQ2C,KAAgB,GAAzEzC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAayC,EAAlC,EAA6Bd,KAAkB1B,EAA/C,EAA+CA,MAM/C,OAJAE,qBAAW,WACPJ,EAAYY,KACb,CAACZ,EAAaY,IAEH,YAAXX,EACQ,qBAAKf,UAAU,WAAf,SACH,cAAC6B,EAAA,EAAD,MAGLb,EACQ,oBAAGhB,UAAU,WAAb,cAA0BgB,EAA1B,OAGPwC,EAAYrD,KAGT,oCACC,cAAC,EAAD,CAAkBA,KAAMqD,EAAYrD,KAAMgD,OAAQK,EAAYL,SAC9D,cAAC,IAAD,CAAOM,KAAMJ,EAAMI,KAAMC,OAAK,EAA9B,SACI,qBAAK1D,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAY2D,GAAE,UAAKN,EAAMO,IAAX,aAA9B,iCAIR,cAAC,IAAD,CAAOH,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACI,cAAC,EAAD,SAXD","file":"static/js/4.f9d89818.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__33K_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3Ahjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3n58e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2g-nu\",\"loading\":\"NewCommentForm_loading__3uc0U\",\"control\":\"NewCommentForm_control__3Ilc5\",\"actions\":\"NewCommentForm_actions__1GoOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3jbAH\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect( () => {\n\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest( {commentData: {text:enteredText}, quoteId: props.quoteId});\n    commentTextRef.current.value = \"\";\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centred\"> \n            <LoadingSpinner /> \n          </div>\n        )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport useHttp from '../../hooks/use-http';\nimport  { getAllComments } from '../../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data:loadedComments} = useHttp(getAllComments);\n\n  useEffect( () => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const onAddedCommentHandler = useCallback( () => { \n    sendRequest(quoteId);\n\n  }, [sendRequest, quoteId]);\n  \n  let comments;\n\n  if(status === 'pending'){\n    comments = <div className=\"centered\"> <LoadingSpinner /> </div>;\n  }\n  if(status === 'completed' && loadedComments && loadedComments.length > 0){\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if(status === 'completed' && (!loadedComments && loadedComments === 0)){\n    comments = <p className=\"centered\"> No Comments were added yet!</p>;\n  }\n\n  console.log(comments);\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddedComment={onAddedCommentHandler} quoteId={quoteId} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from 'react'\r\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n\r\nconst QuotesDetails = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n    const { quoteId } = params;\r\n    \r\n\r\n    const { sendRequest, status, data:loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect( () => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if(status === 'pending'){\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n    if(error){\r\n        return <p className=\"centered\"> {error} </p>\r\n    }\r\n\r\n    if(!loadedQuote.text){\r\n        return <p> No quote data found here </p>;\r\n    }\r\n    return <section> \r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}> Load Comments </Link>\r\n                </div>\r\n            </Route>\r\n        \r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </section>\r\n};\r\n\r\nexport default QuotesDetails;"],"sourceRoot":""}